@page "/random"
@inject HttpClient Http

<div class="mx-2">
    <EditForm Model="RandomListModel" OnValidSubmit="RandomListModel.AddInputToList" class="mb-4">
        <InputText placeholder="Enter a random item" @bind-Value="RandomListModel.Input"></InputText>
    </EditForm>

    @if (RandomListModel.Items.Any())
    {
        <ol class="mb-4">
            @foreach (var item in RandomListModel.Items)
            {
                <li>
                    @if (item.Popped)
                    {
                        <del>@item.Name</del>
                    }
                    else
                    {
                        <span>@item.Name</span>
                    }
                </li>
            }
        </ol>
    }

    <div class="row no-gutters">
        <button @onclick="_ => RandomListModel.Randomize()" class="mb-4 mr-2 btn btn-primary">Randomize!</button>
        <button @onclick="_ => RandomListModel.Get()" class="mb-4 mr-2 btn btn-primary">Get!</button>
        <button @onclick="_ => RandomListModel.Pop()" class="mb-4 mr-2 btn btn-primary">Pop!</button>
        <button @onclick="_ => RandomListModel.Reset(false)" class="mb-4 mr-2 btn btn-warning">Reset</button>
        <button @onclick="_ => RandomListModel.Reset()" class="mb-4 btn btn-danger">Clear</button>
    </div>

    <div class="h-100 font-weight-bold rounded border p-1 border-primary">@(RandomListModel.RandomItem ?? "...")</div>
</div>

@code {
    public RandomListModel RandomListModel { get; set; }
    [CascadingParameter] MainLayout Layout { get; set; }

    private void InitRandomizeAList()
    {
        Layout.SubTitle = "List";
    }

    protected override void OnInitialized()
    {
        RandomListModel = new RandomListModel();

        base.OnInitialized();
        Layout.Reset();
        Layout.Title = "Random";
        Layout.PageActions = new List<(string Name, Action Action)>
{
        ("Randomize a list", InitRandomizeAList)
    };

        Layout.PageActions[0].Action();
        GetRandomWord().ContinueWith(word =>
        {
            RandomListModel.RandomItem = word.Result;
            StateHasChanged();
        });
    }

    private async Task<string> GetRandomWord()
    {
        return (await Http.GetFromJsonAsync<string[]>("https://random-word-api.herokuapp.com/word"))[0];
    }
}