@page "/random"
@inject HttpClient Http

<EditForm Model="RandomListModel" OnValidSubmit="RandomListModel.AddInputToList" class="mb-2">
    <div class="row no-gutters align-items-baseline">
        <label class="mr-4">
            Add an entry to your random list:
            <InputText @bind-Value="RandomListModel.Input"></InputText>
        </label>

        <button @onclick="e => RandomListModel.Randomize()" type="button" class="mr-2 btn btn-primary">Randomize!</button>
        <span class="mr-2">=></span>
        <span class="h-100" style="min-width: 20px; border-bottom: 1px solid grey">@(RandomListModel.RandomItem ?? "... what are you waiting for?")</span>
    </div>
</EditForm>

@if (RandomListModel.Items.Any())
{
    <label>Your random list:</label>
    <ol>
        @foreach (var item in RandomListModel.Items)
        {
            <li>@item</li>
        }
    </ol>
}

@code {
    public RandomListModel RandomListModel { get; set; }
    [CascadingParameter] MainLayout Layout { get; set; }

    private void InitRandomizeAList()
    {
        Layout.SubTitle = "List";
    }

    protected override void OnInitialized()
    {
        RandomListModel = new RandomListModel(GetRandomWord, StateHasChanged);

        base.OnInitialized();
        Layout.Reset();
        Layout.Title = "Random";
        Layout.PageActions = new List<(string Name, Action Action)>
    {
            ("Randomize a list", InitRandomizeAList)
        };

        Layout.PageActions[0].Action();
    }

    private async Task<string> GetRandomWord()
    {
        return (await Http.GetFromJsonAsync<string[]>("https://random-word-api.herokuapp.com/word"))[0];
    }
}